[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float speed = 1.7;
uniform float amplitude = 0.008;
uniform float aspect_ratio = 1;
uniform vec2 offset_scale = vec2(1, 1);
uniform float hit = 0.0;
uniform float height = 40.0;


void vertex() {
	VERTEX.x += (sin(TIME * speed) + (hit * 0.5)) * amplitude * (VERTEX.y - height);
	
}
/*void fragment() {
	
	vec2 wave_uv_offset;
	wave_uv_offset.x = UV.x + 1.0;
	wave_uv_offset.y = UV.y;
	COLOR = vec4(wave_uv_offset, 0.0, 1.0);
	//COLOR = texture(TEXTURE, wave_uv_offset);
}*/"

[resource]
shader = SubResource( 1 )
shader_param/speed = 1.7
shader_param/amplitude = 0.008
shader_param/aspect_ratio = 1.0
shader_param/offset_scale = Vector2( 1, 1 )
shader_param/hit = 0.0
shader_param/height = 40.0
